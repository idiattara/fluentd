import org.apache.commons.io.IOUtils
import org.apache.nifi.processor.io.StreamCallback
import org.apache.nifi.flowfile.attributes.CoreAttributes

def flowFile = session.get()
if (!flowFile) return

try {
    session.read(flowFile, { inputStream ->
        def flowfile_content = IOUtils.toString(inputStream, StandardCharsets.UTF_8)
        def sourceFile = new ObsPy().read(flowfile_content)

        def network = sourceFile[0].stats.network
        def station = sourceFile[0].stats.station
        def location = sourceFile[0].stats.location
        def channel = sourceFile[0].stats.channel
        def timing = sourceFile[0].stats.starttime.strftime("%Y%m%d_%H%M%S")

        if (network == 'RA' && station == 'NAG1' && channel[0..1] == 'HH') {
            network = 'EF'
            location = '01'
        }

        def resultat = "${network}.${station}.${location}.${channel}.${timing}.mseed"
        flowFile = session.putAttribute(flowFile, 'resultat', resultat)
    } as StreamCallback)

    session.transfer(flowFile, REL_SUCCESS)
} catch (Exception e) {
    // Gérer l'exception, imprimer la trace ou effectuer d'autres actions nécessaires
    log.error("Une erreur s'est produite lors du traitement du FlowFile: {}", e.toString())
    session.transfer(flowFile, REL_FAILURE)
}
